<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

chan send_slave,moveToTarget,moveAwayTarget,joinFormation,breakFormation,call_slave,obstacle_detected,obstacle_avoided,update_path;
broadcast chan call_master,send_master,keep_formation;
int slave_number=0;
bool masterLeft=false;
bool masterRight=false;</declaration>
	<template>
		<name x="5" y="5">MasterControl</name>
		<declaration>// Place local declarations here.
clock x;</declaration>
		<location id="id0" x="-263" y="-85">
			<name x="-273" y="-119">start</name>
		</location>
		<location id="id1" x="331" y="-76">
			<name x="255" y="-85">master</name>
			<label kind="invariant" x="321" y="-59">x&lt;5</label>
		</location>
		<location id="id2" x="-42" y="-85">
			<name x="-52" y="-119">solo</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-85" y="-34">update_path?</label>
			<nail x="-25" y="-34"/>
			<nail x="-59" y="-34"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="408" y="-42">update_path?</label>
			<nail x="382" y="-17"/>
			<nail x="408" y="-51"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="68" y="51">slave_number==0</label>
			<nail x="136" y="42"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="467" y="-153">x&gt;=5</label>
			<label kind="synchronisation" x="433" y="-136">keep_formation!</label>
			<label kind="assignment" x="467" y="-119">x:=0</label>
			<nail x="416" y="-110"/>
			<nail x="391" y="-144"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="263" y="25">slave_number&gt;0</label>
			<label kind="synchronisation" x="263" y="42">send_slave!</label>
			<label kind="assignment" x="263" y="59">slave_number--</label>
			<nail x="340" y="0"/>
			<nail x="289" y="-8"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="289" y="-229">slave_number&lt;2</label>
			<label kind="synchronisation" x="306" y="-212">call_slave!</label>
			<label kind="assignment" x="289" y="-195">slave_number++,x:=0</label>
			<nail x="331" y="-153"/>
			<nail x="280" y="-144"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="93" y="-195">call_master!</label>
			<label kind="assignment" x="127" y="-178">x:=0</label>
			<nail x="127" y="-178"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<nail x="-136" y="-85"/>
			<nail x="-76" y="-85"/>
			<nail x="-59" y="-85"/>
		</transition>
	</template>
	<template>
		<name>SlavePosition</name>
		<declaration>clock x,y;</declaration>
		<location id="id3" x="-518" y="-76">
			<name x="-528" y="-110">start</name>
		</location>
		<location id="id4" x="-229" y="-85">
			<name x="-263" y="-127">slaveInTransit</name>
			<label kind="invariant" x="-255" y="-76">x&lt;=30</label>
		</location>
		<location id="id5" x="110" y="-85">
			<name x="42" y="-136">slaveReady</name>
			<label kind="invariant" x="100" y="-68">x&lt;=10</label>
		</location>
		<location id="id6" x="314" y="-212">
			<name x="382" y="-178">masterStateLeft</name>
			<label kind="invariant" x="304" y="-195">y&lt;=5</label>
		</location>
		<location id="id7" x="348" y="51">
			<name x="314" y="17">masterStateRight</name>
			<label kind="invariant" x="330" y="68">y&lt;=5</label>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id5"/>
			<target ref="id3"/>
			<label kind="guard" x="-178" y="110">x&gt;=10</label>
			<label kind="synchronisation" x="-195" y="144">send_slave?</label>
			<nail x="-161" y="145"/>
			<nail x="-501" y="-59"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="340" y="-238">keep_formation?</label>
			<label kind="assignment" x="382" y="-221">y:=0</label>
			<nail x="331" y="-246"/>
			<nail x="357" y="-212"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="416" y="59">keep_formation?</label>
			<label kind="assignment" x="450" y="68">y:=0</label>
			<nail x="399" y="42"/>
			<nail x="382" y="76"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="assignment" x="178" y="51">masterRight=false,x=0</label>
			<nail x="187" y="42"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="guard" x="178" y="-76">masterRight==false &amp;&amp; masterLeft==true</label>
			<label kind="assignment" x="229" y="-59">masterRight=true,y:=0</label>
			<nail x="263" y="-59"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="assignment" x="272" y="-136">masterLeft=false,x=0</label>
			<nail x="255" y="-136"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-8" y="-238">masterRight==false &amp;&amp; masterLeft==false</label>
			<label kind="assignment" x="154" y="-212">masterLeft=true,y:=0</label>
			<nail x="136" y="-212"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="-102" y="-161">x&gt;=30</label>
			<label kind="assignment" x="-93" y="-144">x:=0</label>
			<nail x="-85" y="-144"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-433" y="-110">call_slave?</label>
		</transition>
	</template>
	<template>
		<name>ObstacleEmulator</name>
		<location id="id8" x="-442" y="-161">
			<name x="-535" y="-170">No_obstacle</name>
		</location>
		<location id="id9" x="-348" y="-161">
			<name x="-323" y="-170">Obstacle</name>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-433" y="-119">obstacle_avoided!</label>
			<nail x="-391" y="-119"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-459" y="-229">obstacle_detected!</label>
			<nail x="-391" y="-212"/>
		</transition>
	</template>
	<template>
		<name>ObstacleAvoidance</name>
		<declaration>clock x;</declaration>
		<location id="id10" x="-382" y="-170">
			<name x="-510" y="-187">existing_trajectory</name>
		</location>
		<location id="id11" x="-238" y="-170">
			<name x="-289" y="-204">new_trajectory</name>
			<label kind="invariant" x="-248" y="-153">x&lt;1</label>
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-161" y="-178">update_path!</label>
			<nail x="-174" y="-221"/>
			<nail x="-174" y="-119"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-374" y="-119">obstacle_avoided?</label>
			<nail x="-306" y="-119"/>
			<nail x="-357" y="-153"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-374" y="-246">obstacle_detected?</label>
			<label kind="assignment" x="-331" y="-212">x:=0</label>
			<nail x="-365" y="-187"/>
			<nail x="-323" y="-221"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
//Process = Template();
// List one or more processes to be composed into a system.
//system Process;

masterControl= MasterControl();

slavePosition1 = SlavePosition();
slavePosition2= SlavePosition();

emulator=ObstacleEmulator();
obstacleavoider=ObstacleAvoidance();
//slaveControl1= SlaveControl();
//slaveControl2= SlaveControl();


system slavePosition1,slavePosition2,masterControl,emulator,obstacleavoider;
//slaveControl1,slaveControl2;</system>
	<queries>
		<query>
			<formula>A[] not (slavePosition1.masterStateRight and slavePosition2.masterStateRight)</formula>
			<comment>Slave 1 and 2 can not be at the master state right at the same time</comment>
		</query>
		<query>
			<formula>A[] not (slavePosition1.masterStateLeft and slavePosition2.masterStateLeft)</formula>
			<comment>Slave 1 and 2 can not be at the master state left at the same time</comment>
		</query>
		<query>
			<formula>E&lt;&gt;slavePosition1.masterStateLeft</formula>
			<comment>Slave position1 will reach Masterstateleft in some path</comment>
		</query>
		<query>
			<formula>E&lt;&gt;slavePosition2.masterStateLeft</formula>
			<comment>Slave position2 will reach Masterstateleft in some path</comment>
		</query>
		<query>
			<formula>E&lt;&gt;slavePosition2.masterStateRight</formula>
			<comment>Slave position2 will reach Masterstateright in some path</comment>
		</query>
		<query>
			<formula>E&lt;&gt; obstacleavoider.existing_trajectory imply x&lt;=1</formula>
			<comment>In somepath obstacle avoider will exit trajectory if x&lt;1</comment>
		</query>
		<query>
			<formula>E&lt;&gt; obstacleavoider.new_trajectory imply x=0</formula>
			<comment>In somepath obstacle avoider will take new trajectory if x=0</comment>
		</query>
		<query>
			<formula>E&lt;&gt;slavePosition1.masterStateRight</formula>
			<comment>Slave position1 will reach Masterstateright in some path</comment>
		</query>
	</queries>
</nta>
